openapi: '3.0.2'
info:
  title: FastAPI
  version: '0.1.0'
servers:
  - url: 'https://fastapilangchain-1-w0858112.deta.app'
paths:
  /todos:
    get:
      summary: Read Todos
      operationId: read_todos_todos_get
      parameters:
        - required: false
          schema:
            title: Completed
            type: boolean
          name: completed
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Read Todos Todos Get
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      summary: Create Todo
      operationId: create_todo_todos_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /todos/{id}:
    get:
      summary: Read Todo
      operationId: read_todo_todos__id__get
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      summary: Update Todo
      operationId: update_todo_todos__id__put
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      summary: Delete Todo
      operationId: delete_todo_todos__id__delete
      parameters:
        - required: true
          schema:
            title: Id
            type: integer
          name: id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api-docs:
    get:
      summary: Read Api Docs
      operationId: read_api_docs_api_docs_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Todo:
      title: Todo
      required:
        - task
      type: object
      properties:
        id:
          title: Id
          type: integer
        task:
          title: Task
          type: string
        is_completed:
          title: Is Completed
          type: boolean
          default: false
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
              - type: string
              - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
